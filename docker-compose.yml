services:
  mariadb:
    container_name: mariadb
    image: mariadb:11.3.2
    platform: linux/arm64
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./bash/init-maria-db.sh:/docker-entrypoint-initdb.d/init-maria-db.sh
      - ./mariadb_backup/backup.sh:/backup.sh
      - ./mariadb_backup/backups:/backups
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PW}
      DB_READ_PW: ${DB_READ_PW}
      DB_FPP_PW: ${DB_FPP_PW}
    restart: unless-stopped
    healthcheck:
      interval: 10s
      retries: 5
      timeout: 10s
      test:
        [
          "CMD",
          "healthcheck.sh",
          "--su-mysql",
          "--connect",
          "--innodb_initialized",
        ]
    networks:
      - db
    ports:
      - "33306:3306"

  fpp-server:
    container_name: fpp-server
    platform: linux/arm64
    restart: unless-stopped
    build:
      context: ./fpp_server/
      dockerfile: Dockerfile
    environment:
      LOG_LEVEL: INFO
      FPP_SERVER_SECRET: ${FPP_SERVER_SECRET}
    volumes:
      - fpp_server_data:/usr/src/app
    networks:
      - proxy

  fpp-analytics:
    container_name: fpp-analytics
    platform: linux/arm64
    restart: unless-stopped
    build:
      context: ./fpp_analytics/
      dockerfile: Dockerfile
    environment:
      LOG_LEVEL: INFO
      ANALYTICS_SECRET_TOKEN: ${ANALYTICS_SECRET_TOKEN}
      BEA_BASE_URL: ${BEA_BASE_URL}
      BEA_SECRET_KEY: ${BEA_SECRET_KEY}
      DB_HOST: mariadb
      DB_USERNAME: fpp
      DB_PORT: 3306
      DB_PASSWORD: ${DB_FPP_PW}
    depends_on:
      - mariadb
    networks:
      - db
      - proxy
    volumes:
      - fpp_analytics_data:/usr/src/app

  caddy:
    image: caddy:2
    container_name: caddy
    platform: linux/arm64
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./photo_gallery:/var/www/photos:ro
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped
    networks:
      - proxy
      - plausible_proxy

  snow-finder:
    container_name: snow-finder
    platform: linux/arm64
    restart: unless-stopped
    build:
      context: ./snow_finder/
      dockerfile: Dockerfile
    volumes:
      - snow_finder_data:/usr/src/app
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      BASE_URL: ${SNOW_FINDER_BASE_URL}
    networks:
      - proxy

volumes:
  mariadb_data:
  fpp_server_data:
  fpp_analytics_data:
  snow_finder_data:
  caddy_data:
  caddy_config:

networks:
  proxy:
  db:
  plausible_proxy:
    external: true
